version: '3'
services:
  vas:
    build: ./nginx
    container_name: ${PROJECT_NAME}-vas
    hostname: vas
    domainname: ${DOMAIN}
    restart: always
    ports:
      - "${HTTPPORT}:80"
      - "${HTTPSPORT}:443"
    command: /opt/runfiles/run_nginx.sh
    volumes:
      - ./runfiles:/opt/runfiles:ro
      - ./nginx/etc:/opt/nginx:ro
      - ../certs:/opt/certs:ro
      - ../static:/var/www/static:ro
      - ../media:/var/www/media:rw
    environment:
      MODE: ${MODE}
    tty: true
    networks:
      - vas
    depends_on:
      - translator

  admin:
    build: ./admin
    command: ../boot.sh
    container_name: ${PROJECT_NAME}-admin
    hostname: admin
    domainname: ${DOMAIN}
    restart: always
    ports:
      - 127.0.0.1:8083:8000
    volumes:
      - ../vas:/opt/vas:ro
    environment:
      DEBUG: ${DEBUG}
      MODE: ${MODE}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${DBS_HOST}
      DB_NAME: ${POSTGRES_DB}
    networks:
      - vas
    tty: true
    depends_on:
      - pgdb
      - translator
      - beholder

  translator:
    build: ./translator
    command: /opt/runfiles/run_translator.sh
    container_name: ${PROJECT_NAME}-translator
    hostname: translator
    domainname: ${DOMAIN}
    restart: always
    ports:
      - "${EGTS_PORT}:${EGTS_PORT}"
      - "${WIALON_PORT}:${WIALON_PORT}"
    volumes:
      - ./runfiles:/opt/runfiles:ro
      - ../translator/translator:/opt/translator
    environment:
      TRANS_ADDR: ${TRANS_ADDR}
      EGTS_PORT: ${EGTS_PORT}
      WIALON_PORT: ${WIALON_PORT}
      PROTOCOLS: ${PROTOCOLS}
      WS_ADDR: ${WS_ADDR}
      WS_PORT: ${WS_PORT}
      MODE: ${MODE}
    networks:
      - vas
    tty: true

  keeper:
    build: ./keeper
    command: /opt/runfiles/run_keeper.sh
    container_name: ${PROJECT_NAME}-keeper
    hostname: keeper
    domainname: ${DOMAIN}
    restart: always
    volumes:
      - ./runfiles:/opt/runfiles:ro
      - ../keeper/keeper:/opt/keeper
    environment:
      WS_ADDR: translator
      WS_PORT: ${WS_PORT}
#      GDBACKEND: ${GDBACKEND}
      GDB_HOST: ${GDB_HOST}
      GDB_PORT: ${GDB_PORT}
#      GDB_USER: ${GDB_USER}
#      GDB_PASS: ${GDB_PASS}
      GDB_DBNAME: ${GDB_DBNAME}
      LOCATION: ${LOCATION}
      ROUTE_RADIUS: ${ROUTE_RADIUS}
      PLATFORM_RADIUS: ${PLATFORM_RADIUS}
#      ROUTE_UNIT: ${ROUTE_UNIT}
#      PLATFORM_UNIT: ${PLATFORM_UNIT}
      DBS_HOST: ${DBS_HOST}
#      DBS_PORT: ${DBS_PORT}
      DBS_USER: ${POSTGRES_USER}
      DBS_PASS: ${POSTGRES_PASSWORD}
      DBS_DBNAME: ${POSTGRES_DB}
      RMQ_HOST: ${RMQ_HOST}
      RMQ_PORT: ${RMQ_PORT}
      RMQ_USER: ${RMQ_USER}
      RMQ_PASS: ${RMQ_PASS}
    networks:
      - vas
    tty: true
    depends_on:
      - pgdb
      - redis
      - translator
      - rabbitmq

  redis:
    image: redis:5.0.5-alpine
    container_name: ${PROJECT_NAME}-redis
    restart: always
    ports:
      - 127.0.0.1:6399:6379
    networks:
      - vas

  pgdb:
    image: postgres
    container_name: ${PROJECT_NAME}-pgdb
    hostname: pgdb
    domainname: ${DOMAIN}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - vas_pgdata:/var/lib/postgresql
    networks:
      - vas

  rabbitmq:
    image: rabbitmq:3-management
    container_name: ${PROJECT_NAME}-rabbitmq
    hostname: rmq
    domainname: ${DOMAIN}
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RMQ_PASS}
    ports:
      - 127.0.0.1:${RMQ_PORT}:5672
      - ${RMQ_MONITOR_PORT}:15672
    networks:
      - vas

  beholder:
    build: ./beholder
    command: /opt/runfiles/run_beholder.sh
    container_name: ${PROJECT_NAME}-beholder
    hostname: beholder
    domainname: ${DOMAIN}
    restart: always
    volumes:
      - ./runfiles:/opt/runfiles:ro
      - ../beholder/src:/opt/beholder
    environment:
      WS_ADDR: ${WS_ADDR}
      WS_PORT: ${WS_PORT}
      DBS_HOST: pgdb
      DBS_PORT: ${DBS_PORT}
      DBS_USER: ${POSTGRES_USER}
      DBS_PASS: ${POSTGRES_PASSWORD}
      DBS_DBNAME: ${POSTGRES_DB}
      RMQ_HOST: rabbitmq
      RMQ_PORT: ${RMQ_PORT}
      RMQ_USER: ${RMQ_USER}
      RMQ_PASS: ${RMQ_PASS}
    networks:
      - vas
    tty: true
    depends_on:
#      - pgdb
      - rabbitmq
      - keeper

networks:
  vas:
    driver: bridge

volumes:
  vas_pgdata:

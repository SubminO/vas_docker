version: '3'
services:
  vas:
    build: ./nginx
    container_name: vas
    hostname: vas
    domainname: ${DOMAIN}
    restart: always
    ports:
      - "${HTTPPORT}:80"
      - "${HTTPSPORT}:443"
    command: /opt/runfiles/run_nginx.sh
    volumes:
      - ./runfiles:/opt/runfiles:ro
      - ./nginx/etc:/opt/nginx:ro
      - ../certs:/opt/certs:ro
    environment:
      MODE: ${MODE}
    tty: true
    networks:
      - vas
    depends_on:
      - translator

  translator:
    build: ./translator
    command: /opt/runfiles/run_translator.sh
    container_name: translator
    hostname: translator
    domainname: ${DOMAIN}
    restart: always
    ports:
      - "${EGTS_PORT}:${EGTS_PORT}"
      - "${WIALON_PORT}:${WIALON_PORT}"
    volumes:
      - ./runfiles:/opt/runfiles:ro
      - ../translator/translator:/opt/translator
    environment:
      TRANS_ADDR: ${TRANS_ADDR}
      EGTS_PORT: ${EGTS_PORT}
      WIALON_PORT: ${WIALON_PORT}
      PROTOCOLS: ${PROTOCOLS}
      WS_ADDR: ${WS_ADDR}
      WS_PORT: ${WS_PORT}
      MODE: ${MODE}
    networks:
      - vas
    tty: true

  redis:
    image: redis:5.0.5-alpine
    container_name: redis
    restart: always
    ports:
      - 127.0.0.1:6399:6379
    networks:
      - vas

  pgdb:
    image: postgres
    container_name: pgdb
    hostname: pgdb
    domainname: ${DOMAIN}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    volumes:
      - vas_pgdata:/var/lib/postgresql
    networks:
      - vas

networks:
  vas:
    driver: bridge

volumes:
  vas_pgdata:
